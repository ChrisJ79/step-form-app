{"version":3,"sources":["components/form-user-details.jsx","components/form-personal-details.jsx","components/confirm.jsx","components/success.jsx","components/user-form.jsx","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","className","title","align","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","Confirm","List","primaryText","secondaryText","Success","UserForm","state","step","setState","input","target","value","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fb5179c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport '../App.css';\n\nclass FormUserDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n    render() {\n        const {values, handleChange} = this.props;\n        return (\n            <MuiThemeProvider>\n                 <React.Fragment className=\"reactFragment\">\n                    <AppBar title=\"Enter User Details\" align=\"center\" />\n                    <TextField\n                        hintText=\"Enter Your First Name\"\n                        floatingLabelText=\"First Name\"\n                        onChange={handleChange('firstName')}\n                        defaultValue={values.firstName}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Last Name\"\n                        floatingLabelText=\"Last Name\"\n                        onChange={handleChange('lastName')}\n                        defaultValue={values.lastName}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Email\"\n                        floatingLabelText=\"Email\"\n                        onChange={handleChange('email')}\n                        defaultValue={values.email}\n                    />\n                    <br/>\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue}\n                    />\n                    <h1>Multi-Step Form</h1>\n                    <p>Built using React.js & Material UI</p>\n                 </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default FormUserDetails;\n","import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport '../App.css';\n\nclass FormPersonalDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const {values, handleChange} = this.props;\n        return (\n            <MuiThemeProvider>\n                 <React.Fragment className=\"reactFragment\">\n                    <AppBar title=\"Enter Personal Details\" align=\"center\" />\n                    <TextField\n                        hintText=\"Enter Your Occupation\"\n                        floatingLabelText=\"Occupation\"\n                        onChange={handleChange('occupation')}\n                        defaultValue={values.occupation}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your City\"\n                        floatingLabelText=\"City\"\n                        onChange={handleChange('city')}\n                        defaultValue={values.city}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Bio\"\n                        floatingLabelText=\"Bio\"\n                        onChange={handleChange('bio')}\n                        defaultValue={values.bio}\n                    />\n                    <br/>\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue}\n                    />\n                    <RaisedButton\n                        label=\"Back\"\n                        primary={false}\n                        style={styles.button}\n                        onClick={this.back}\n                    />\n                 </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default FormPersonalDetails;\n","import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport {List, ListItem, ListItemText} from 'material-ui/List'\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport '../App.css';\n\nclass Confirm extends Component {\n    continue = e => {\n        e.preventDefault();\n        //Confirms all imput entries\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const {\n            values: { firstName, lastName, email, occupation, city, bio }\n        } = this.props;\n        return (\n            <MuiThemeProvider>\n                 <React.Fragment className=\"reactFragment\">\n                    <AppBar title=\"Confirm Your Information\" align=\"center\" />\n                    <List>\n                        <ListItem\n                                primaryText=\"First Name:\"\n                                secondaryText={firstName}\n                        />\n                        <ListItem\n                                primaryText=\"Last Name:\"\n                                secondaryText={lastName}\n                        />\n                        <ListItem\n                                primaryText=\"Email:\"\n                                secondaryText={email}\n                        />\n                        <ListItem\n                                primaryText=\"Occupation:\"\n                                secondaryText={occupation}\n                        />\n                        <ListItem\n                                primaryText=\"City:\"\n                                secondaryText={city}\n                        />\n                        <ListItem\n                                primaryText=\"Bio:\"\n                                secondaryText={bio}\n                        />\n                    </List>\n                    <RaisedButton\n                        label=\"Confirm\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue}\n                    />\n                    <RaisedButton\n                        label=\"Back\"\n                        primary={false}\n                        style={styles.button}\n                        onClick={this.back}\n                    />\n                 </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default Confirm;\n","import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\n\nimport '../App.css';\n\nclass Success extends Component {\n    continue = e => {\n        e.preventDefault();\n        //Confirms all imput entries\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider>\n                 <React.Fragment className=\"reactFragment\">\n                    <AppBar title=\"Success\" align=\"center\" />\n                    <h1>Thank you for your submission!</h1>\n                    <p>You will receive an email confirmation shortly.</p>\n                 </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\n\n\nexport default Success;\n","\nimport React, { Component } from 'react';\nimport FormUserDetails from './form-user-details';\nimport FormPersonalDetails from './form-personal-details';\nimport Confirm from './confirm';\nimport Success from './success';\nimport '../App.css';\n\nclass UserForm extends Component {\n    state = {\n        step: 1,\n        firstName: '',\n        lastName: '',\n        email: '',\n        occupation: '',\n        city: '',\n        bio: ''\n    }\n\n// Proceed to the next step\nnextStep = () => {\n  const {step} = this.state;\n  this.setState({\n    step: step + 1\n  });\n}\n\n// Back to the previous step\nprevStep = () => {\n  const {step} = this.state;\n  this.setState({\n    step: step - 1\n  });\n}\n\n\n// Handle input fields change\nhandleChange = input => e => {\n  this.setState({[input]: e.target.value});\n}\n\n  render() {\n    const {step} = this.state;\n    const {firstName, lastName, email, occupation, city, bio} = this.state;\n    const values = {firstName, lastName, email, occupation, city, bio};\n    switch (step) {\n      case 1:\n        return (\n          <div>\n            <FormUserDetails\n              nextStep = {this.nextStep}\n              handleChange = {this.handleChange}\n              values = {values}\n            />\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <FormPersonalDetails\n              nextStep = {this.nextStep}\n              prevStep = {this.prevStep}\n              handleChange = {this.handleChange}\n              values = {values}\n            />\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <Confirm\n              nextStep = {this.nextStep}\n              prevStep = {this.prevStep}\n              values = {values}\n            />\n          </div>\n        );\n      case 4:\n        return (\n          <div>\n            <Success />\n          </div>\n        );\n      }\n    }\n  }\n\nexport default UserForm;\n","import React from 'react';\nimport UserForm from './components/user-form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" align=\"center\">\n        <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}